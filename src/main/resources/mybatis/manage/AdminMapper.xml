<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.sghong.manager.app.manage.mapper.AdminMapper">
    <select id="select_by_adminId_for_group" resultType="adminDto">
        set session transaction isolation level read uncommitted;

        select      a.adminid, a.adminname, a.adminpwd, a.groupcode, a.authflag, a.pwderrcnt, a.hp,
                    b.groupwrite, b.groupread
        from        admins as a
        inner join  admin_groups as b on a.groupcode = b.groupcode
        where       adminid = #{adminId}
        and         a.delflag = 'N';

        set session transaction isolation level repeatable read;
    </select>

    <insert id="login_insert">
        insert into admin_logins (
            adminid,
            ip
        ) values (
                     #{adminId},
                     #{ip}
                 )
    </insert>

    <update id="update_for_login_success">
        update admins set
                          pwderrcnt = 0,
                          updateid = #{adminId},
                          updateip = #{ip},
                          updatedt = now()
        where adminid = #{adminId}
    </update>

    <update id="update_for_login_fail">
        update admins set
                          pwderrcnt = pwderrcnt + 1,
                          updateid = #{adminId},
                          updateip = #{ip},
                          updatedt = now()
        where adminid = #{adminId}
    </update>

    <select id="select_by_groupcode" resultType="adminDto">
        set session transaction isolation level read uncommitted;

        select      a.adminid, a.adminname, a.adminpwd, a.groupcode, a.hp, a.authflag, a.pwderrcnt, a.createdt,
                    b.groupname, b.groupwrite, b.groupread
        from        admins as a
        inner join  admin_groups as b on a.groupcode = b.groupcode
        where       a.groupcode = #{groupcode}
        and         a.delflag = 'N';

        set session transaction isolation level repeatable read;
    </select>

    <select id="select_by_list_for_totalCount" parameterType="adminSearchDto" resultType="int">
        set session transaction isolation level read uncommitted;

        select
                    IFNULL(COUNT(adminid), 0) as totalcount
        from        admins
        where       delflag = 'N'
                    <include refid="admin_search" />
        order by    createdt DESC;

        set session transaction isolation level repeatable read;
    </select>

    <select id="select_by_list" parameterType="adminSearchDto" resultType="adminDto">
        set session transaction isolation level read uncommitted;

        select
                    adminid, adminname, adminpwd, groupcode, hp, authflag, pwderrcnt, createdt
        from        admins
        where       delflag = 'N'
                    <include refid="admin_search" />
        order by    createdt DESC
        LIMIT       #{pagination.limitStart}, #{recordsize};

        set session transaction isolation level repeatable read;
    </select>

    <sql id="admin_search">
        <if test="keyword != null and keyword != ''">
            <choose>
                <when test='searchtype.equals("adminname")'>
                    and adminname LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test='searchtype.equals("adminid")'>
                    and adminid LIKE CONCAT('%', #{keyword}, '%')
                </when>
            </choose>
        </if>
        <if test='groupcode != null and groupcode != ""'>
            and groupcode = #{groupcode}
        </if>
    </sql>

    <select id="select_by_adminId_For_Count" resultType="int">
        set session transaction isolation level read uncommitted;

        select
                    IFNULL(COUNT(adminid), 0) as admincount
        from        admins
        where       adminid = #{adminId};

        set session transaction isolation level repeatable read;
    </select>

    <insert id="insert_admin" parameterType="adminDto">
        insert into admins (
            adminid,
            groupcode,
            adminname,
            adminpwd,
            hp,
            createid,
            createip
        ) values (
                     #{adminid},
                     #{groupcode},
                     #{adminname},
                     #{adminpwd},
                     #{hp},
                     #{createid},
                     #{createip}
                 )
    </insert>

    <select id="select_by_adminId" resultType="adminDTO">
        set session transaction isolation level read uncommitted;

        select
                    adminid, groupcode, adminname, hp, authflag, pwderrcnt,
                    createid, createip, createdt, updateid, updateip, updatedt
        from        admins
        where       adminid = #{adminId};

        set session transaction isolation level repeatable read;
    </select>

    <update id="update_admin_for_groupcode" parameterType="adminDto">
        update admins set
                          groupcode = #{groupcode},
                          updateid = #{createid},
                          updateip = #{createip},
                          updatedt = now()
        where adminid = #{adminid}
    </update>

    <update id="update_adminpwd" parameterType="adminDto">
        update admins set
                          adminpwd = #{adminpwd},
                          updateid = #{createid},
                          updateip = #{createip},
                          updatedt = now()
        where adminid = #{adminid}
    </update>

    <update id="update_adminhp" parameterType="adminDto">
        update admins set
                          hp = #{hp},
                          sdupinfo = '',
                          authflag = 'N',
                          authdate = null,
                          updateid = #{createid},
                          updateip = #{createip},
                          updatedt = now()
        where adminid = #{adminid}
    </update>

    <update id="update_admininfo" parameterType="adminDto">
        update admins set
                          groupcode = #{groupcode},
                          adminname = #{adminname},
                          updateid = #{createid},
                          updateip = #{createip},
                          updatedt = now()
        where adminid = #{adminid}
    </update>

    <update id="delete_admin" parameterType="adminDto">
        update admins set
                          delflag = 'Y',
                          updateid = #{createid},
                          updateip = #{createip},
                          updatedt = now()
        where adminid = #{adminid}
    </update>

    <select id="select_by_admin_login_for_totalCount" parameterType="adminSearchDto" resultType="int">
        set session transaction isolation level read uncommitted;

        select
                    IFNULL(COUNT(idx), 0) as totalcount
        from        admin_logins
                    <include refid="select_by_admin_login_search" />
        ;

        set session transaction isolation level repeatable read;
    </select>

    <select id="select_by_admin_login_list" parameterType="adminSearchDto" resultType="adminLoginDto">
        set session transaction isolation level read uncommitted;

        select
                    adminid, ip, logindt
        from        admin_logins
                    <include refid="select_by_admin_login_search" />
        order by    idx desc
        limit       #{pagination.limitStart}, #{recordsize};

        set session transaction isolation level repeatable read;
    </select>

    <sql id="select_by_admin_login_search">
        <if test="keyword != null and keyword != ''">
            where adminid = #{keyword}
        </if>
    </sql>

    <select id="select_by_list_for_group_search" resultType="adminDto">
        set session transaction isolation level read uncommitted;

        select
                    a.adminid, a.adminname, a.hp, a.createdt, b.groupname
        from        admins as a
        inner join  admin_groups as b on a.groupcode = b.groupcode
        where       a.groupcode != '1000'
        and         a.delflag = 'N'
        <choose>
            <when test='authType.equals("R")'>
                and b.groupread LIKE CONCAT('%', #{mCode2}, '%')
            </when>
            <otherwise>
                and b.groupwrite LIKE CONCAT('%', #{mCode2}, '%')
            </otherwise>
        </choose>
        ;

        set session transaction isolation level repeatable read;
    </select>


</mapper>